<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks>net472;netstandard2.0;net6.0;net7.0;</TargetFrameworks>
    <Platforms>x86;x64;ARM32;ARM64;AnyCPU</Platforms>
    <LangVersion>latest</LangVersion>
    <Nullable>enable</Nullable>
    <IsTrimmable>true</IsTrimmable>
    <AllowUnsafeBlocks>True</AllowUnsafeBlocks>
  </PropertyGroup>

  <PropertyGroup>
    <Version>5.0.0</Version>
    <Authors>Tolik Pylypchuk</Authors>
    <Company>Tolik Pylypchuk</Company>
    <Product>SharpHook</Product>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <Copyright>(c) 2021 Anatoliy Pylypchuk</Copyright>
    <Description>Provides a cross-platform global keyboard and mouse hook for .NET, and the ability to simulate input events</Description>
    <RepositoryType>git</RepositoryType>
    <RepositoryUrl>https://github.com/TolikPylypchuk/SharpHook</RepositoryUrl>
    <PackageProjectUrl>https://sharphook.tolik.io</PackageProjectUrl>
    <PackageReadmeFile>README.md</PackageReadmeFile>
    <PackageTags>input keyboard mouse hook global-hook simulator libuiohook</PackageTags>
    <PackageIcon>icon.png</PackageIcon>
    <PackageIconUrl />
    <IncludeSymbols>true</IncludeSymbols>
    <SymbolPackageFormat>snupkg</SymbolPackageFormat>
    <PublishRepositoryUrl>true</PublishRepositoryUrl>
    <EmbedUntrackedSources>true</EmbedUntrackedSources>
  </PropertyGroup>

  <PropertyGroup>
    <DocumentationFile>$(ProjectDir)SharpHook.xml</DocumentationFile>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.SourceLink.GitHub" Version="1.1.1" PrivateAssets="All" />
  </ItemGroup>

  <ItemGroup>
    <None Include="SharpHook.targets">
      <PackagePath>build/SharpHook.targets</PackagePath>
      <Pack>True</Pack>
    </None>
    <None Include="..\icon.png">
      <Pack>True</Pack>
      <PackagePath />
    </None>
    <None Include="README.md">
      <Pack>True</Pack>
      <PackagePath />
    </None>
  </ItemGroup>

  <ItemGroup>
    <None Include="lib\linux-x64\libuiohook.so">
      <PackagePath>runtimes/linux-x64/native/libuiohook.so</PackagePath>
      <Pack>True</Pack>
    </None>
    <None Include="lib\linux-arm\libuiohook.so">
      <PackagePath>runtimes/linux-arm/native/libuiohook.so</PackagePath>
      <Pack>True</Pack>
    </None>
    <None Include="lib\linux-arm64\libuiohook.so">
      <PackagePath>runtimes/linux-arm64/native/libuiohook.so</PackagePath>
      <Pack>True</Pack>
    </None>
    <None Include="lib\maccatalyst-x64\libuiohook.dylib">
      <PackagePath>runtimes/maccatalyst-x64/native/libuiohook.dylib</PackagePath>
      <Pack>True</Pack>
    </None>
    <None Include="lib\maccatalyst-arm64\libuiohook.dylib">
      <PackagePath>runtimes/maccatalyst-arm64/native/libuiohook.dylib</PackagePath>
      <Pack>True</Pack>
    </None>
    <None Include="lib\osx-x64\libuiohook.dylib">
      <PackagePath>runtimes/osx-x64/native/libuiohook.dylib</PackagePath>
      <Pack>True</Pack>
    </None>
    <None Include="lib\osx-arm64\libuiohook.dylib">
      <PackagePath>runtimes/osx-arm64/native/libuiohook.dylib</PackagePath>
      <Pack>True</Pack>
    </None>
    <None Include="lib\win-x86\uiohook.dll">
      <PackagePath>runtimes/win-x86/native/uiohook.dll</PackagePath>
      <Pack>True</Pack>
    </None>
    <None Include="lib\win-x64\uiohook.dll">
      <PackagePath>runtimes/win-x64/native/uiohook.dll</PackagePath>
      <Pack>True</Pack>
    </None>
    <None Include="lib\win-arm64\uiohook.dll">
      <PackagePath>runtimes/win-arm64/native/uiohook.dll</PackagePath>
      <Pack>True</Pack>
    </None>
  </ItemGroup>

  <ItemGroup Condition="$([MSBuild]::IsOSPlatform('Windows')) And '$(Platform)' == 'x86'">
    <ContentWithTargetPath Include="lib\win-x86\uiohook.dll">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <TargetPath>uiohook.dll</TargetPath>
      <Pack>False</Pack>
    </ContentWithTargetPath>
  </ItemGroup>

  <ItemGroup Condition="$([MSBuild]::IsOSPlatform('Windows')) And '$(Platform)' == 'x64'">
    <ContentWithTargetPath Include="lib\win-x64\uiohook.dll">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <TargetPath>uiohook.dll</TargetPath>
      <Pack>False</Pack>
    </ContentWithTargetPath>
  </ItemGroup>

  <ItemGroup Condition="$([MSBuild]::IsOSPlatform('Windows')) And '$(Platform)' == 'ARM64'">
    <ContentWithTargetPath Include="lib\win-arm64\uiohook.dll">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <TargetPath>uiohook.dll</TargetPath>
      <Pack>False</Pack>
    </ContentWithTargetPath>
  </ItemGroup>

  <ItemGroup Condition="$([MSBuild]::IsOSPlatform('OSX')) And '$(Platform)' == 'x64'">
    <ContentWithTargetPath Include="lib\osx-x64\libuiohook.dylib">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <TargetPath>libuiohook.dylib</TargetPath>
      <Pack>False</Pack>
    </ContentWithTargetPath>
  </ItemGroup>

  <ItemGroup Condition="$([MSBuild]::IsOSPlatform('OSX')) And '$(Platform)' == 'ARM64'">
    <ContentWithTargetPath Include="lib\osx-arm64\libuiohook.dylib">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <TargetPath>libuiohook.dylib</TargetPath>
      <Pack>False</Pack>
    </ContentWithTargetPath>
  </ItemGroup>

  <ItemGroup Condition="$([MSBuild]::IsOSPlatform('Linux')) And '$(Platform)' == 'x64'">
    <ContentWithTargetPath Include="lib\linux-x64\libuiohook.so">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <TargetPath>libuiohook.so</TargetPath>
      <Pack>False</Pack>
    </ContentWithTargetPath>
  </ItemGroup>

  <ItemGroup Condition="$([MSBuild]::IsOSPlatform('Linux')) And '$(Platform)' == 'ARM32'">
    <ContentWithTargetPath Include="lib\linux-arm\libuiohook.so">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <TargetPath>libuiohook.so</TargetPath>
      <Pack>False</Pack>
    </ContentWithTargetPath>
  </ItemGroup>

  <ItemGroup Condition="$([MSBuild]::IsOSPlatform('Linux')) And '$(Platform)' == 'ARM64'">
    <ContentWithTargetPath Include="lib\linux-arm64\libuiohook.so">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <TargetPath>libuiohook.so</TargetPath>
      <Pack>False</Pack>
    </ContentWithTargetPath>
  </ItemGroup>
</Project>
